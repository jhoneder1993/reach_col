tabla <- tabla |> add_row(type = sv[["type.1"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i],
name = sv[["name"]][i],
label = sv[["label"]][i])
} else {
filtro <- cc |> filter(list_name == sv[["type.2"]][32]) |>
mutate(conca = paste(sv[["name"]][32], name, sep="/")) |>
select(label, conca) |> rename(name = conca) |>
mutate(type = sv[["type.1"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.1"]][i])
tabla <- rbind(tabla, filtro)
}
}
View(tabla)
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
for (i in 1:nrow(sv)) {
if (sv[["type.1"]][i] != "select_multiple") {
tabla <- tabla |> add_row(type = sv[["type.1"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i],
name = sv[["name"]][i],
label = sv[["label"]][i])
} else {
filtro <- cc |> filter(list_name == sv[["type.2"]][32]) |>
mutate(conca = paste(sv[["name"]][32], name, sep="/")) |>
select(label, conca) |> rename(name = conca) |>
mutate(type = sv[["type"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.1"]][i])
tabla <- rbind(tabla, filtro)
}
}
View(tabla)
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
for (i in 1:nrow(sv)) {
if (sv[["type.1"]][i] != "select_multiple") {
tabla <- tabla |> add_row(type = sv[["type.1"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i],
name = sv[["name"]][i],
label = sv[["label"]][i])
} else {
filtro <- cc |> filter(list_name == sv[["type.2"]][i]) |>
mutate(conca = paste(sv[["name"]][i], name, sep="/")) |>
select(label, conca) |> rename(name = conca) |>
mutate(type = sv[["type"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i])
tabla <- rbind(tabla, filtro)
}
}
View(tabla)
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
tabla <- tabla %>%
rbind(sv %>%
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) %>%
filter(type.1 != "select_multiple") %>%
select(type, type.1, type.2, name, label),
sv %>%
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) %>%
filter(type.1 == "select_multiple") %>%
left_join(cc %>%
filter(list_name == type.2) %>%
select(label, name) %>%
rename(conca = paste(name, sv$name, sep="/")),
by = c("name" = "conca")) %>%
select(type, type.1, type.2, conca = name, label) %>%
rename(name = conca))
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
tabla <- tabla %>%
rbind(sv %>%
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) %>%
filter(type.1 != "select_multiple") %>%
select(type, type.1, type.2, name, label),
sv %>%
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) %>%
filter(type.1 == "select_multiple") %>%
left_join(cc %>%
filter(list_name == type.2) %>%
select(label, name) %>%
rename(conca = paste(name, sv$name, sep="/")),
by = c("name" = "conca")) %>%
select(type, type.1, type.2, conca = name, label) %>%
rename(name = conca))
View(sv)
## Load data
sv <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "survey")
cc <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "choices", guess_max = 100000)
## Select just the data to work
sv <- sv |> select(type, name, label)
sv[c("type.1", "type.2")] <- str_split_fixed(sv$type, " ", 2)
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
tabla <- tabla %>%
rbind(sv %>%
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) %>%
filter(type.1 != "select_multiple") %>%
select(type, type.1, type.2, name, label),
sv %>%
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) %>%
filter(type.1 == "select_multiple") %>%
left_join(cc %>%
filter(list_name == type.2) %>%
select(label, name) %>%
rename(conca = paste(name, sv$name, sep="/")),
by = c("name" = "conca")) %>%
select(type, type.1, type.2, conca = name, label) %>%
rename(name = conca))
tabla <- tabla  |>
rbind(sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 != "select_multiple") |>
select(type, type.1, type.2, name, label),
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple") |>
left_join(cc |>
filter(list_name == type.2) |>
select(label, name) |>
rename(conca = paste(name, sv$name, sep="/")),
by = c("name" = "conca")) |>
select(type, type.1, type.2, conca = name, label) |>
rename(name = conca))
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 != "select_multiple")
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 != "select_multiple") |>
select(type, type.1, type.2, name, label)
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 != "select_multiple") |>
select(type, type.1, type.2, name, label),
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple")
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2])
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple")
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple") |>
left_join(cc |>
filter(list_name == type.2) |>
select(label, name) |>
rename(conca = paste(name, sv$name, sep="/")),
by = c("name" = "conca"))
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple") |>
left_join(cc |>
filter(list_name == type.2)
sv |>
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple") |>
left_join(cc |>
filter(list_name == type.2) |>
select(label, name)
sv |>
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple") |>
left_join(cc |>
filter(list_name == type.2) |>
select(label, name) |>
rename(conca = paste(name, sv$name, sep="/"))
sv |>
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple") |>
left_join(cc |>
filter(list_name == type.2) |>
select(label, name) |>
rename(conca = paste(name, sv$name, sep="/"))
sv |>
sv |>
mutate(type.1 = str_split(type, " ")[[1]][1],
type.2 = str_split(type, " ")[[1]][2]) |>
filter(type.1 == "select_multiple") |>
left_join(cc |>
filter(list_name == type.2) |>
select(label, name) |>
rename(conca = paste(name, sv$name, sep="/")),
by = c("name" = "conca"))
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
tabla <- sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name")) %>%
select(-name) %>%
rename(type = type.1, name = conca) %>%
tidyr::pivot_wider(names_from = type.2, values_from = c(label, name))
sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name"))
sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name")) %>%
select(-name)
sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name"))
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
tabla
## Load data
sv <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "survey")
function (x, df1, df2, ncp, log = FALSE)
## Load data
sv <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "survey")
cc <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "choices", guess_max = 100000)
## Select just the data to work
sv <- sv |> select(type, name, label)
sv[c("type.1", "type.2")] <- str_split_fixed(sv$type, " ", 2)
tabla <- sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name")) %>%
select(-name) %>%
rename(type = type.1, name = conca) %>%
tidyr::pivot_wider(names_from = type.2, values_from = c(label, name))
tabla
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
tabla <- sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name")) %>%
select(-name) %>%
rename(type = type.1, name = conca) %>%
tidyr::pivot_wider(names_from = type.2, values_from = c(label, name))
sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name"))
sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1))
sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name"))
tabla <- sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name")) %>%
select(-name.y) %>%
rename(type = type.1, name = conca) %>%
tidyr::pivot_wider(names_from = type.2, values_from = c(label, name))
sv %>%
mutate(type.1 = ifelse(type.1 == "select_multiple", type.2, type.1)) %>%
left_join(cc %>%
mutate(conca = paste(sv$name, name, sep="/")),
by = c("type.2" = "list_name")) %>%
select(-name.y)
tabla <- bind_rows(tabla,
sv %>%
filter(type.1 != "select_multiple") %>%
select(type, type.1, type.2, name, label),
cc %>%
filter(list_name %in% sv[type.1 == "select_multiple", "type.2"]) %>%
mutate(conca = paste(sv[["name"]][i], name, sep="/")) %>%
select(label, conca) %>%
rename(name = conca) %>%
mutate(type = sv[["type"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i])
)
## Agregar información para las que no son select_multiple
tabla_1 <- sv %>%
filter(type.1 != "select_multiple") %>%
select(type, type.1, type.2, name, label)
## Load data
sv <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "survey")
cc <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "choices", guess_max = 100000)
## Select just the data to work
sv <- sv |> select(type, name, label)
sv[c("type.1", "type.2")] <- str_split_fixed(sv$type, " ", 2)
## Agregar información para las que no son select_multiple
tabla_1 <- sv %>%
filter(type.1 != "select_multiple") %>%
select(type, type.1, type.2, name, label)
## Agregar información para las que son select_multiple
tabla_2 <- sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name, name.y, sep = "/")) %>%
select(label = label.y, conca) %>%
rename(name = conca) %>%
select(type = type, type.1 = type.1, type.2 = type.2, name, label)
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name"))
sv %>%
filter(type.1 == "select_multiple")
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name"))
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name, name.y, sep = "/"))
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name.x, name.y, sep = "/"))
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name.x, name.y, sep = "/")) %>%
select(label = label.y, conca)
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name.x, name.y, sep = "/")) %>%
select(label = label.y, conca) %>%
rename(name = conca)
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name.x, name.y, sep = "/")) %>%
select(label = label.y, conca) %>%
rename(name = conca) %>%
select(type = type, type.1 = type.1, type.2 = type.2, name, label)
sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name.x, name.y, sep = "/")) %>%
select(label = label.y, conca) %>%
rename(name = conca)
## Agregar información para las que son select_multiple
tabla_2 <- sv %>%
filter(type.1 == "select_multiple") %>%
left_join(cc, by = c(type.2 = "list_name")) %>%
mutate(conca = paste(name.x, name.y, sep = "/")) %>%
select(label = label.y, conca) %>%
rename(name = conca) %>%
select(type = type, type.1 = type.1, type.2 = type.2, name, label)
writexl::write_xlsx(list(lables = tabla),
"C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Output/salida_labels.xlsx")
View(tabla)
## Load data
sv <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "survey")
cc <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "choices", guess_max = 100000)
## Select just the data to work
sv <- sv |> select(type, name, label)
sv[c("type.1", "type.2")] <- str_split_fixed(sv$type, " ", 2)
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
for (i in 1:nrow(sv)) {
# Iniciar por las que no son select_multiple
if (sv[["type.1"]][i] != "select_multiple") {
# Agregar la informacion a la tabla vacia
tabla <- tabla |> add_row(type = sv[["type.1"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i],
name = sv[["name"]][i],
label = sv[["label"]][i])
# Si es select multiple
} else {
# realizar un filtro, un mutate, seleccionar la info importante, rename,
# otro mutate para agregar la informacion
filtro <- cc |> filter(list_name == sv[["type.2"]][i]) |>
mutate(conca = paste(sv[["name"]][i], name, sep="/")) |>
select(label, conca) |> rename(name = conca) |>
mutate(type = sv[["type"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i])
# unir las tablas
tabla <- rbind(tabla, filtro)
}
}
writexl::write_xlsx(list(lables = tabla),
"C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Output/salida_labels.xlsx")
## Load data
sv <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "survey")
cc <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "choices", guess_max = 100000)
## Select just the data to work
sv <- sv |> select(type, name, label)
sv[c("type.1", "type.2")] <- str_split_fixed(sv$type, " ", 2)
tabla <- data.frame(type = as.character(),
type.1 = as.character(),
type.2 = as.character(),
name = as.character(),
label = as.character())
for (i in 1:nrow(sv)) {
# Iniciar por las que no son select_multiple
if (sv[["type.1"]][i] != "select_multiple") {
# Agregar la informacion a la tabla vacia
tabla <- tabla |> add_row(type = sv[["type.1"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i],
name = sv[["name"]][i],
label = sv[["label"]][i])
# Si es select multiple
} else {
# realizar un filtro, un mutate, seleccionar la info importante, rename,
# otro mutate para agregar la informacion
tabla <- tabla |> add_row(type = sv[["type.1"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i],
name = sv[["name"]][i],
label = sv[["label"]][i])
filtro <- cc |> filter(list_name == sv[["type.2"]][i]) |>
mutate(conca = paste(sv[["name"]][i], name, sep="/")) |>
select(label, conca) |> rename(name = conca) |>
mutate(type = sv[["type"]][i],
type.1 = sv[["type.1"]][i],
type.2 = sv[["type.2"]][i])
# unir las tablas
tabla <- rbind(tabla, filtro)
}
}
View(tabla)
writexl::write_xlsx(list(lables = tabla),
"C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Output/salida_labels.xlsx")
View(sv)
r("obtain_labels")
usethis::use_r("obtain_labels")
devtools::install_github("https://github.com/jhoneder1993/jmmi_col.git")
library(JmmiColombia)
library(readxl)
library(dplyr)
library(stringr)
library(JmmiColombia)
## Load data
sv <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "survey")
cc <- read_excel("C:/Users/Montero/ACTED/IMPACT COL - General/2_Research_Management/MSNA_2022/2_Data/3_Analysis/Espacial/Input/MSNA-6ta ronda- Formulario final_v7.xlsx",
sheet = "choices", guess_max = 100000)
tabla <- obtain_labels(sv, cc)
View(tabla)
usethis::use_r("kobo_to_DAP")
